{"version":3,"sources":["easy-query.js"],"names":["fs","require","module","exports","scss","generateRange","framework","key","$rpx","buildLibrary","$xs","$sm","$md","$lg","$xl","$xx","length","queued","arguments","Error","constructor","Array","sort","console","dir","ex","writeFile","err"],"mappings":"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","file":"easy-query.min.js","sourcesContent":["\"use strict\";\nvar fs = require(\"fs\");\n\n/**\n *\n * @param scss - Either a valid string representing the name of framework's breakpoints you'd wish to use or a custom array of\n *                 breakpoints. Must follow the structure shown below to be valid (given values are for example only).\n *                 The breakpoints will be named according to how many breakpoints are being used in the given framework/array.\n *                 Please consult the README.md file to reference this table of breakpoint variable names.\n *\n *                 ['bp1-px','bp2-px','bp3-px']\n *\n *                 This will generate your breakpoint SCSS code that will resemble:\n *\n *                 (0$rpxrem === 1px @ 16px HTML)\n *\n *                 $break-1: (null, (bp1 - $rpx);\n *                 $break-2: (bp1, (bp2 - $rpx);\n *                 $break-3: (bp2, (bp3 - $rpx);\n *                 $break-4: (bp3, null);\n *\n * @returns {string}\n */\nmodule.exports = function EasyQuery(scss) {\n    var framework,\n        $rpx = .0625;\n    var queued = \"$screen: 'only screen' !default;\\n\\n@function lower-bound($range) {\\n\\n  @if length($range) <= 0 {\\n    @return 0;\\n  }\\n\\n  @return nth($range, 1);\\n}\\n\\n@function upper-bound($range) {\\n\\n  @if length($range) < 2 {\\n    @return 999999999999;\\n  }\\n\\n  @return nth($range, 2);\\n}\\n\\n\";\n    if(arguments.length === 0 || arguments.length === 1) {\n        if((arguments.length === 1 && typeof arguments[0] === 'string' ) || (arguments.length === 1 && arguments[0].constructor === Array)) {\n            try {\n                if(typeof arguments[0] === 'string') {\n                    framework = require('./frameworks/' + scss);\n                } else if(arguments[0].constructor === Array) {\n                    framework = arguments[0].sort();\n                }\n                buildLibrary(framework);\n                console.dir(framework);\n            } catch(ex) {\n                throw new Error('Could not parse library: ' + scss + '. Does it exist? Error message: ' + ex);\n            }\n        } else {\n            framework = require('./frameworks/bootstrap3');\n            buildLibrary(framework);\n        }\n    } else {\n        throw new Error('Too many arguments passed to EasyQuery. Expected 0 or 1, got ' + arguments.length);\n    }\n\n    fs.writeFile('./_easy-query.scss', queued, function(err) {\n        if(err) {\n            throw new Error('Could not write _easy-query.scss. Error message: ' + err);\n        }\n    });\n    \n    function generateRange(framework,key) {\n        return \"-range: (\" + framework[key] + \"rem, \" + (framework[key + 1] - $rpx) + \"rem);\\n\";\n    }\n\n    function buildLibrary(framework) {\n        var $xs = \"$xs\", $sm = \"$sm\", $md = \"$md\", $lg = \"$lg\", $xl = \"$xl\", $xx = \"$xx\";\n        switch(framework.length) {\n            case 1: {\n                queued +=\n                    $sm + \"-only: '#{$screen} and (max-width: \" + (framework[0] - $rpx) + \"rem)';\\n\" +\n                    $lg + \"-only: '#{$screen} and (min-width: \" + framework[0] + \"rem)';\";\n                break;\n            }\n            case 2: {\n                queued +=\n                    $md + generateRange(framework,0) +\n\n                    $sm + \"-only: '#{$screen} and (max-width: \" + (framework[0] - $rpx) + \"rem)';\\n\" +\n\n                    $md + \"-only: '#{$screen} and (min-width: \" + framework[0] + \"rem) and (max-width: #{upper-bound(\" + $md + \"-range)})';\\n\" +\n                    $md + \"-up: '#{$screen} and (min-width: \" + framework[0] + \"rem)';\\n\" +\n                    $md + \"-down: '#{$screen} and (max-width: #{upper-bound(\" + $md + \"-range)})';\\n\" +\n\n                    $lg + \"-only: '#{$screen} and (min-width: \" + framework[1] + \"rem)';\\n\";\n                break;\n            }\n            case 3: {\n                queued +=\n                    $sm + generateRange(framework,0) +\n                    $md + generateRange(framework,1) +\n\n                    $xs + \"-only: '#{$screen} and (max-width: \" + (framework[0] - $rpx) + \"rem)';\\n\" +\n\n                    $sm + \"-only: '#{$screen} and (min-width: \" + framework[0] + \"rem) and (max-width: #{upper-bound(\" + $sm + \"-range)})';\\n\" +\n                    $sm + \"-up: '#{$screen} and (min-width: \" + framework[0] + \"rem)';\\n\" +\n                    $sm + \"-down: '#{$screen} and (max-width: #{upper-bound(\" + $sm + \"-range)})';\\n\" +\n\n                    $md + \"-only: '#{$screen} and (min-width: \" + framework[1] + \"rem) and (max-width: #{upper-bound(\" + $md + \"-range)})';\\n\" +\n                    $md + \"-up: '#{$screen} and (min-width: \" + framework[1] + \"rem)';\\n\" +\n                    $md + \"-down: '#{$screen} and (max-width: #{upper-bound(\" + $md + \"-range)})';\\n\" +\n\n                    $lg + \"-only: '#{$screen} and (min-width: \" + framework[2] + \"rem)';\\n\";\n                break;\n            }\n            case 4: {\n                queued +=\n                    $sm + generateRange(framework,0)+\n                    $md + generateRange(framework,1) +\n                    $lg + generateRange(framework,2) +\n\n                    $xs + \"-only: '#{$screen} and (max-width: \" + (framework[0] - $rpx) + \"rem)';\\n\" +\n\n                    $sm + \"-only: '#{$screen} and (min-width: \" + framework[0] + \"rem) and (max-width: #{upper-bound(\" + $sm + \"-range)})';\\n\" +\n                    $sm + \"-up: '#{$screen} and (min-width: \" + framework[0] + \"rem)';\\n\" +\n                    $sm + \"-down: '#{$screen} and (max-width: #{upper-bound(\" + $sm + \"-range)})';\\n\" +\n\n                    $md + \"-only: '#{$screen} and (min-width: \" + framework[1] + \"rem) and (max-width: #{upper-bound(\" + $md + \"-range)})';\\n\" +\n                    $md + \"-up: '#{$screen} and (min-width: \" + framework[1] + \"rem)';\\n\" +\n                    $md + \"-down: '#{$screen} and (max-width: #{upper-bound(\" + $md + \"-range)})';\\n\" +\n\n                    $lg + \"-only: '#{$screen} and (min-width: \" + framework[2] + \"rem) and (max-width: #{upper-bound(\" + $lg + \"-range)})';\\n\" +\n                    $lg + \"-up: '#{$screen} and (min-width: \" + framework[2] + \"rem)';\\n\" +\n                    $lg + \"-down: '#{$screen} and (max-width: #{upper-bound(\" + $lg + \"-range)})';\\n\" +\n\n                    $xl + \"-only: '#{$screen} and (min-width: \" + framework[3] + \"rem)';\\n\";\n\n                break;\n            }\n            case 5: {\n                queued +=\n                    $sm + generateRange(framework,0) +\n                    $md + generateRange(framework,1) +\n                    $lg + generateRange(framework,2) +\n                    $xl + generateRange(framework,3) +\n\n                    $xs + \"-only: '#{$screen} and (max-width: \" + (framework[0] - $rpx) + \"rem)';\\n\" +\n\n                    $sm + \"-only: '#{$screen} and (min-width: \" + framework[0] + \"rem) and (max-width: #{upper-bound(\" + $sm + \"-range)})';\\n\" +\n                    $sm + \"-up: '#{$screen} and (min-width: \" + framework[3] + \"rem)';\\n\" +\n                    $sm + \"-down: '#{$screen} and (max-width: #{upper-bound(\" + $sm + \"-range)})';\\n\" +\n\n                    $md + \"-only: '#{$screen} and (min-width: \" + framework[1] + \"rem) and (max-width: #{upper-bound(\" + $md + \"-range)})';\\n\" +\n                    $md + \"-up: '#{$screen} and (min-width: \" + framework[3] + \"rem)';\\n\" +\n                    $md + \"-down: '#{$screen} and (max-width: #{upper-bound(\" + $md + \"-range)})';\\n\" +\n\n                    $lg + \"-only: '#{$screen} and (min-width: \" + framework[2] + \"rem) and (max-width: #{upper-bound(\" + $lg + \"-range)})';\\n\" +\n                    $lg + \"-up: '#{$screen} and (min-width: \" + framework[2] + \"rem)';\\n\" +\n                    $lg + \"-down: '#{$screen} and (max-width: #{upper-bound(\" + $lg + \"-range)})';\\n\" +\n\n                    $xl + \"-only: '#{$screen} and (min-width: \" + framework[3] + \"rem) and (max-width: #{upper-bound(\" + $xl + \"-range)})';\\n\" +\n                    $xl + \"-up: '#{$screen} and (min-width: \" + framework[3] + \"rem)';\\n\" +\n                    $xl + \"-down: '#{$screen} and (max-width: #{upper-bound(\" + $xl + \"-range)})';\\n\" +\n\n                    $xx + \"-only: '#{$screen} and (min-width: \" + framework[4] + \"rem);\\n\";\n                break;\n            }\n        }\n    }\n};"],"sourceRoot":"/source/"}